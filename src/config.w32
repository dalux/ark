ARG_ENABLE("brisk", "enable brisk", "no");

if (PHP_BRISK != "no") {
  EXTENSION("brisk", "brisk.c", null, "-I"+configure_module_dirname);
  ADD_SOURCES(configure_module_dirname + "/kernel", "main.c memory.c exception.c debug.c backtrace.c object.c array.c string.c fcall.c require.c file.c operators.c math.c concat.c variables.c filter.c iterator.c exit.c time.c", "brisk");
  /* PCRE is always included on WIN32 */
  AC_DEFINE("ZEPHIR_USE_PHP_PCRE", 1, "Whether PHP pcre extension is present at compile time");
  if (PHP_JSON != "no") {
    ADD_EXTENSION_DEP("brisk", "json");
    AC_DEFINE("ZEPHIR_USE_PHP_JSON", 1, "Whether PHP json extension is present at compile time");
  }
  
  ADD_SOURCES(configure_module_dirname + "/brisk/toolkit/sqlbuilder", "builderfather.zep.c deletebuilder.zep.c insertbuilder.zep.c selectbuilder.zep.c updatebuilder.zep.c", "brisk");
	ADD_SOURCES(configure_module_dirname + "/brisk/exception", "runtimeexception.zep.c cacheexception.zep.c databaseexception.zep.c eventexception.zep.c kernelexception.zep.c proxyexception.zep.c routerexception.zep.c sessionexception.zep.c toolkitexception.zep.c viewexception.zep.c", "brisk");
	ADD_SOURCES(configure_module_dirname + "/brisk/contract", "idatabase.zep.c icache.zep.c irouter.zep.c isession.zep.c iview.zep.c", "brisk");
	ADD_SOURCES(configure_module_dirname + "/brisk/database", "databasefather.zep.c pdodriver.zep.c databasetoolkit.zep.c", "brisk");
	ADD_SOURCES(configure_module_dirname + "/brisk/cache", "cachefather.zep.c filecache.zep.c memcache.zep.c", "brisk");
	ADD_SOURCES(configure_module_dirname + "/brisk/router", "routerfather.zep.c classicrouter.zep.c rewriterouter.zep.c", "brisk");
	ADD_SOURCES(configure_module_dirname + "/brisk/session", "sessionfather.zep.c filesession.zep.c usersession.zep.c", "brisk");
	ADD_SOURCES(configure_module_dirname + "/brisk/view", "viewfather.zep.c nativeview.zep.c", "brisk");
	ADD_SOURCES(configure_module_dirname + "/brisk/database/pdodriver", "mysql.zep.c oci.zep.c pgsql.zep.c sqlite.zep.c sqlsrv.zep.c", "brisk");
	ADD_SOURCES(configure_module_dirname + "/brisk/kernel", "adapter.zep.c app.zep.c config.zep.c container.zep.c event.zep.c handler.zep.c language.zep.c loader.zep.c request.zep.c response.zep.c server.zep.c timer.zep.c toolkit.zep.c trace.zep.c", "brisk");
	ADD_SOURCES(configure_module_dirname + "/brisk/proxy", "cacheproxy.zep.c", "brisk");
	ADD_SOURCES(configure_module_dirname + "/brisk/toolkit", "querier.zep.c sqlbuilder.zep.c", "brisk");
	ADD_SOURCES(configure_module_dirname + "/brisk/toolkit/sqlbuilder/deletebuilder", "mysql.zep.c oci.zep.c pgsql.zep.c sqlite.zep.c sqlsrv.zep.c", "brisk");
	ADD_SOURCES(configure_module_dirname + "/brisk/toolkit/sqlbuilder/insertbuilder", "mysql.zep.c oci.zep.c pgsql.zep.c sqlite.zep.c sqlsrv.zep.c", "brisk");
	ADD_SOURCES(configure_module_dirname + "/brisk/toolkit/sqlbuilder/selectbuilder", "mysql.zep.c oci.zep.c pgsql.zep.c sqlite.zep.c sqlsrv.zep.c", "brisk");
	ADD_SOURCES(configure_module_dirname + "/brisk/toolkit/sqlbuilder/updatebuilder", "mysql.zep.c oci.zep.c pgsql.zep.c sqlite.zep.c sqlsrv.zep.c", "brisk");
  ADD_FLAG("CFLAGS_BRISK", "/D ZEPHIR_RELEASE /Oi /Ot /Oy /Ob2 /Gs /GF /Gy /GL");
  ADD_FLAG("CFLAGS", "/D ZEPHIR_RELEASE /Oi /Ot /Oy /Ob2 /Gs /GF /Gy /GL");
  ADD_FLAG("LDFLAGS", "/LTCG");
}
